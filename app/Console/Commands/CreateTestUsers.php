<?php

namespace App\Console\Commands;

use App\Models\Client;
use App\Models\City;
use App\Models\Car;
use App\Models\Deal;
use Illuminate\Console\Command;

class CreateTestUsers extends Command
{
    protected $signature = 'create:test-users';

    protected $description = '–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - –∫–ª–∏–µ–Ω—Ç–∞ –∏ –∞—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª—è';

    public function handle()
    {
        $this->info('–°–æ–∑–¥–∞—é —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');

        // –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –≥–æ—Ä–æ–¥
        $city = City::firstOrCreate(
            ['name' => '–ú–æ—Å–∫–≤–∞'],
            ['name' => '–ú–æ—Å–∫–≤–∞']
        );

        // –°–æ–∑–¥–∞–µ–º –∞—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª—è (–≤–ª–∞–¥–µ–ª–µ—Ü –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π)
        $owner = Client::firstOrCreate(
            ['email' => 'owner@test.com'],
            [
                'name' => '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
                'email' => 'owner@test.com',
                'telegram_nickname' => 'ivan_owner',
                'phone' => '+7 (999) 123-45-67',
                'city_id' => $city->id,
                'rating' => 4.8,
                'dispute_count' => 0,
                'is_verified' => true,
                'metadata' => [
                    'registration_date' => now()->subMonths(6)->toDateString(),
                    'total_earnings' => 45000,
                    'cars_owned' => 2,
                ],
            ]
        );

        // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞ (–∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä)
        $renter = Client::firstOrCreate(
            ['email' => 'renter@test.com'],
            [
                'name' => '–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞',
                'email' => 'renter@test.com',
                'telegram_nickname' => 'anna_renter',
                'phone' => '+7 (999) 987-65-43',
                'city_id' => $city->id,
                'rating' => 4.5,
                'dispute_count' => 1,
                'is_verified' => true,
                'metadata' => [
                    'registration_date' => now()->subMonths(3)->toDateString(),
                    'total_rentals' => 5,
                    'preferred_car_type' => 'sedan',
                ],
            ]
        );

        // –°–æ–∑–¥–∞–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –¥–ª—è –∞—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª—è
        $car1 = Car::firstOrCreate(
            ['id' => 1],
            [
                'client_id' => $owner->id,
                'brand' => 'Toyota',
                'model' => 'Camry',
                'year' => 2020,
                'fuel_type' => 'gasoline',
                'transmission' => 'automatic',
                'price_per_day' => 2500,
                'description' => '–û—Ç–ª–∏—á–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –¥–ª—è –ø–æ–µ–∑–¥–æ–∫ –ø–æ –≥–æ—Ä–æ–¥—É –∏ –∑–∞ –≥–æ—Ä–æ–¥. –ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä, –ø–æ–¥–æ–≥—Ä–µ–≤ —Å–∏–¥–µ–Ω–∏–π, –ø–∞—Ä–∫—Ç—Ä–æ–Ω–∏–∫–∏.',
                'is_available' => true,
                'is_promoted' => true,
                'photos' => ['/images/cars/camry1.jpg', '/images/cars/camry2.jpg'],
                'metadata' => [
                    'mileage' => 45000,
                    'color' => '–±–µ–ª—ã–π',
                    'features' => ['–∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä', '–ø–æ–¥–æ–≥—Ä–µ–≤ —Å–∏–¥–µ–Ω–∏–π', '–ø–∞—Ä–∫—Ç—Ä–æ–Ω–∏–∫–∏'],
                ],
            ]
        );

        $car2 = Car::firstOrCreate(
            ['id' => 2],
            [
                'client_id' => $owner->id,
                'brand' => 'Honda',
                'model' => 'CR-V',
                'year' => 2019,
                'fuel_type' => 'gasoline',
                'transmission' => 'automatic',
                'price_per_day' => 3000,
                'description' => '–í–º–µ—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π –∫—Ä–æ—Å—Å–æ–≤–µ—Ä –¥–ª—è —Å–µ–º—å–∏. –ü–æ–ª–Ω—ã–π –ø—Ä–∏–≤–æ–¥, –±–æ–ª—å—à–æ–π –±–∞–≥–∞–∂–Ω–∏–∫, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å.',
                'is_available' => true,
                'is_promoted' => false,
                'photos' => ['/images/cars/crv1.jpg', '/images/cars/crv2.jpg'],
                'metadata' => [
                    'mileage' => 62000,
                    'color' => '—Å–µ—Ä–µ–±—Ä–∏—Å—Ç—ã–π',
                    'features' => ['–ø–æ–ª–Ω—ã–π –ø—Ä–∏–≤–æ–¥', '–±–æ–ª—å—à–æ–π –±–∞–≥–∞–∂–Ω–∏–∫', '–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å'],
                ],
            ]
        );

        // –°–æ–∑–¥–∞–µ–º —Å–¥–µ–ª–∫—É –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
        $deal = Deal::firstOrCreate(
            ['id' => 1],
            [
                'client_id' => $owner->id,
                'renter_id' => $renter->id,
                'car_id' => $car1->id,
                'start_date' => now()->addDays(5),
                'end_date' => now()->addDays(7),
                'total_price' => 5000,
                'status' => 'pending',
                'metadata' => [
                    'pickup_location' => '–ú–æ—Å–∫–≤–∞, –º. –ü–∞—Ä–∫ –ü–æ–±–µ–¥—ã',
                    'return_location' => '–ú–æ—Å–∫–≤–∞, –º. –ü–∞—Ä–∫ –ü–æ–±–µ–¥—ã',
                    'insurance' => true,
                ],
            ]
        );

        $this->info('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã:');
        $this->info('üë§ –ê—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª—å:');
        $this->info("   Email: {$owner->email}");
        $this->info("   –ü–∞—Ä–æ–ª—å: password");
        $this->info("   Telegram: @{$owner->telegram_nickname}");
        $this->info('');

        $this->info('üë§ –ê—Ä–µ–Ω–¥–∞—Ç–æ—Ä:');
        $this->info("   Email: {$renter->email}");
        $this->info("   –ü–∞—Ä–æ–ª—å: password");
        $this->info("   Telegram: @{$renter->telegram_nickname}");
        $this->info('');

        $this->info('üöó –°–æ–∑–¥–∞–Ω–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π: ' . Car::where('client_id', $owner->id)->count());
        $this->info('üìã –°–æ–∑–¥–∞–Ω–æ —Å–¥–µ–ª–æ–∫: ' . Deal::count());

        $this->warn('‚ö†Ô∏è  –î–ª—è –≤—Ö–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ª–æ–≥–∏–∫—É –≤ AuthController');
        $this->warn('   (–ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)');

        return Command::SUCCESS;
    }
} 